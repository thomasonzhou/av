<?xml version="1.0" encoding="utf-8" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="av">

    <material name="dark_grey">
        <color rgba="0.2 0.2 0.2 1.0"/>
    </material>
    <material name="grey">
        <color rgba="0.5 0.5 0.5 1.0"/>
    </material>

    <xacro:property name="y_wheel_offset" value="${0.29 / 2.0}"/>
    
    
    <xacro:macro name="wheel" params="prefix:='' reflect:=1.0 type radius width mass x_offset:='0'">
        <link name="${prefix}wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${radius}" length="${width}"/>
                </geometry>
                <material name="grey"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <!-- prevent wheel drift in simulation with a sphere -->
                    <sphere radius="${drive_wheel_radius}"/> 
                </geometry>
            </collision>
            <inertial>
                <mass value="${mass}"/> 
                <inertia 
                    ixx="${(mass * ((3 * radius ** 2) + width ** 2)) / 12.0}"
                    iyy="${(mass * ((3 * radius ** 2) + width ** 2)) / 12.0}"
                    izz="${(mass * radius ** 2) / 2.0}"
                    ixy="0.0" ixz ="0.0" iyz="0.0"
                />
            </inertial>
        </link>
        <joint name="${prefix}wheel_joint" type="${type}">
            <axis xyz="0 0 1"/>
            <origin xyz="${x_offset} ${reflect * y_wheel_offset} ${radius}" rpy="${-pi / 2.0} 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}wheel_link"/>
            <limit velocity="100.0" effort="100.0"/>
        </joint>
    </xacro:macro>

    <!-- drive wheels -->
    <xacro:property name="motor_mass" value="0.320"/>
    <xacro:property name="drive_wheel_radius" value="${0.11 / 2.0}"/>
    <xacro:property name="drive_wheel_width" value="0.045"/>
    <xacro:wheel prefix="left_" reflect="1.0" type="continuous" radius="${drive_wheel_radius}" width="${drive_wheel_width}" mass="${motor_mass}"/>
    <xacro:wheel prefix="right_" reflect="-1.0" type="continuous" radius="${drive_wheel_radius}" width="${drive_wheel_width}" mass="${motor_mass}"/>

    <!-- caster wheels -->
    <xacro:property name="caster_mass" value="0.100"/>
    <xacro:property name="caster_wheel_radius" value="${0.10 / 2.0}"/>
    <xacro:property name="caster_wheel_width" value="0.040"/>
    <xacro:property name="caster_x_offset" value="0.45"/>
    <xacro:wheel prefix="left_caster_" reflect="1.0" type="continuous" radius="${caster_wheel_radius}" width="${caster_wheel_width}" mass="${caster_mass}" x_offset="${caster_x_offset}"/>
    <xacro:wheel prefix="right_caster_" reflect="-1.0" type="continuous" radius="${caster_wheel_radius}" width="${caster_wheel_width}" mass="${caster_mass}" x_offset="${caster_x_offset}"/>


    <link name="chassis">
        <xacro:property name="body_length" value="0.6"/>
        <xacro:property name="body_width" value="0.4"/>
        <xacro:property name="body_height" value="0.03"/>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${body_length} ${body_width} ${body_height}"/>
            </geometry>
            <material name="dark_grey"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${body_length} ${body_width} ${body_height}"/>
            </geometry>
        </collision>

        <xacro:property name="frame_mass" value="7.0"/>
        <xacro:property name="battery_mass" value="11.0"/>
        <xacro:property name="body_mass" value="${frame_mass + battery_mass}"/>

        <inertial>
            <mass value="${body_mass}"/>
            <inertia 
                ixx="${body_mass * (body_height ** 2 + body_width ** 2) / 12.0}"
                iyy="${body_mass * (body_height ** 2 + body_length ** 2) / 12.0}"
                izz="${body_mass * (body_length ** 2 + body_width ** 2) / 12.0}"
                ixy="0.0" ixz="0.0" iyz="0.0"
            />
        </inertial>
    </link>

    <joint name="chassis_joint" type="fixed">
        <origin xyz="0.23 0 0.095" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="chassis"/>
    </joint>

    <link name="base_link"/>
</robot>